new currentCount, increase, reset, check, stdout(`rho:io:stdout`) in {
  
  // starting the counter at 0
  currentCount!(0) |

  // Method to increase counter (returns the old value)
  contract increase(ack) = {
    for(old <- currentCount) {
      currentCount!(*old + 1) |
      ack!(*old)
    }
  } |

  // Method to reset the counter (returns the old value)
  contract reset(ack) = {
    for(old <- currentCount) {
      currentCount!(0) |
      ack!(*old)
    }
  } |


  // Method to check the value of the counter 
  contract check(ack) = {
    for(oldCount <- ack; count <- currentCount) {
      currentCount!(*count) |
      stdout!(["New count is: ", *count, "Old count was:", *oldCount])
    }

  } |
  new ack in {
    increase!(*ack) |
    for(_ <- ack) {
      increase!(*ack) |
      for(_ <- ack) {
        increase!(*ack) |
        for(_ <- ack) {
        increase!(*ack) |
        check!(*ack)
        }
      }
    }
  }
}